// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BrainCommunication.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Braincommunication {
  public static partial class BrainCommunicator
  {
    static readonly string __ServiceName = "braincommunication.BrainCommunicator";

    static readonly grpc::Marshaller<global::Braincommunication.Observations> __Marshaller_braincommunication_Observations = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Braincommunication.Observations.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Braincommunication.AgentAction> __Marshaller_braincommunication_AgentAction = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Braincommunication.AgentAction.Parser.ParseFrom);

    static readonly grpc::Method<global::Braincommunication.Observations, global::Braincommunication.AgentAction> __Method_GetAction = new grpc::Method<global::Braincommunication.Observations, global::Braincommunication.AgentAction>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAction",
        __Marshaller_braincommunication_Observations,
        __Marshaller_braincommunication_AgentAction);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Braincommunication.BrainCommunicationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BrainCommunicator</summary>
    public abstract partial class BrainCommunicatorBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Braincommunication.AgentAction> GetAction(global::Braincommunication.Observations request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BrainCommunicator</summary>
    public partial class BrainCommunicatorClient : grpc::ClientBase<BrainCommunicatorClient>
    {
      /// <summary>Creates a new client for BrainCommunicator</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BrainCommunicatorClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BrainCommunicator that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BrainCommunicatorClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BrainCommunicatorClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BrainCommunicatorClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Braincommunication.AgentAction GetAction(global::Braincommunication.Observations request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Braincommunication.AgentAction GetAction(global::Braincommunication.Observations request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Braincommunication.AgentAction> GetActionAsync(global::Braincommunication.Observations request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Braincommunication.AgentAction> GetActionAsync(global::Braincommunication.Observations request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BrainCommunicatorClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BrainCommunicatorClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BrainCommunicatorBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAction, serviceImpl.GetAction).Build();
    }

  }
}
#endregion
