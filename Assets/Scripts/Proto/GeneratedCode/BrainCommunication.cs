// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BrainCommunication.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Braincommunication {

  /// <summary>Holder for reflection information generated from BrainCommunication.proto</summary>
  public static partial class BrainCommunicationReflection {

    #region Descriptor
    /// <summary>File descriptor for BrainCommunication.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BrainCommunicationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhCcmFpbkNvbW11bmljYXRpb24ucHJvdG8SEmJyYWluY29tbXVuaWNhdGlv",
            "biJECgxPYnNlcnZhdGlvbnMSGQoRbG93ZXJPYnNlcnZhdGlvbnMYASADKAIS",
            "GQoRdXBwZXJPYnNlcnZhdGlvbnMYAiADKAIiHQoLQWdlbnRBY3Rpb24SDgoG",
            "YWN0aW9uGAEgASgFMmUKEUJyYWluQ29tbXVuaWNhdG9yElAKCUdldEFjdGlv",
            "bhIgLmJyYWluY29tbXVuaWNhdGlvbi5PYnNlcnZhdGlvbnMaHy5icmFpbmNv",
            "bW11bmljYXRpb24uQWdlbnRBY3Rpb24iAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Braincommunication.Observations), global::Braincommunication.Observations.Parser, new[]{ "LowerObservations", "UpperObservations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Braincommunication.AgentAction), global::Braincommunication.AgentAction.Parser, new[]{ "Action" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Observations : pb::IMessage<Observations> {
    private static readonly pb::MessageParser<Observations> _parser = new pb::MessageParser<Observations>(() => new Observations());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Observations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Braincommunication.BrainCommunicationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observations(Observations other) : this() {
      lowerObservations_ = other.lowerObservations_.Clone();
      upperObservations_ = other.upperObservations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Observations Clone() {
      return new Observations(this);
    }

    /// <summary>Field number for the "lowerObservations" field.</summary>
    public const int LowerObservationsFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_lowerObservations_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> lowerObservations_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> LowerObservations {
      get { return lowerObservations_; }
    }

    /// <summary>Field number for the "upperObservations" field.</summary>
    public const int UpperObservationsFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_upperObservations_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> upperObservations_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> UpperObservations {
      get { return upperObservations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Observations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Observations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lowerObservations_.Equals(other.lowerObservations_)) return false;
      if(!upperObservations_.Equals(other.upperObservations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lowerObservations_.GetHashCode();
      hash ^= upperObservations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lowerObservations_.WriteTo(output, _repeated_lowerObservations_codec);
      upperObservations_.WriteTo(output, _repeated_upperObservations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lowerObservations_.CalculateSize(_repeated_lowerObservations_codec);
      size += upperObservations_.CalculateSize(_repeated_upperObservations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Observations other) {
      if (other == null) {
        return;
      }
      lowerObservations_.Add(other.lowerObservations_);
      upperObservations_.Add(other.upperObservations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            lowerObservations_.AddEntriesFrom(input, _repeated_lowerObservations_codec);
            break;
          }
          case 18:
          case 21: {
            upperObservations_.AddEntriesFrom(input, _repeated_upperObservations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// int action for agent
  /// </summary>
  public sealed partial class AgentAction : pb::IMessage<AgentAction> {
    private static readonly pb::MessageParser<AgentAction> _parser = new pb::MessageParser<AgentAction>(() => new AgentAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgentAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Braincommunication.BrainCommunicationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentAction(AgentAction other) : this() {
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentAction Clone() {
      return new AgentAction(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private int action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgentAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgentAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgentAction other) {
      if (other == null) {
        return;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
