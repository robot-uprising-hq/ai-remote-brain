// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RobotSystemCommunication.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Robotsystemcommunication {

  /// <summary>Holder for reflection information generated from RobotSystemCommunication.proto</summary>
  public static partial class RobotSystemCommunicationReflection {

    #region Descriptor
    /// <summary>File descriptor for RobotSystemCommunication.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RobotSystemCommunicationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5Sb2JvdFN5c3RlbUNvbW11bmljYXRpb24ucHJvdG8SGHJvYm90c3lzdGVt",
            "Y29tbXVuaWNhdGlvbiJHChJSb2JvdEFjdGlvblJlcXVlc3QSFwoPbGVmdE1v",
            "dG9yQWN0aW9uGAEgASgFEhgKEHJpZ2h0TW90b3JBY3Rpb24YAiABKAUiSwoT",
            "Um9ib3RBY3Rpb25SZXNwb25zZRI0CgZzdGF0dXMYASABKA4yJC5yb2JvdHN5",
            "c3RlbWNvbW11bmljYXRpb24uU3RhdHVzVHlwZSIlChNCcmFpbkFjdGlvblJl",
            "c3BvbnNlEg4KBmFjdGlvbhgBIAEoBSJKChJCcmFpbkFjdGlvblJlcXVlc3QS",
            "GQoRbG93ZXJPYnNlcnZhdGlvbnMYASADKAISGQoRdXBwZXJPYnNlcnZhdGlv",
            "bnMYAiADKAIiMAofU2ltdWxhdGlvblNjcmVlbkNhcHR1cmVSZXNwb25zZRIN",
            "CgVpbWFnZRgBIAEoDCKLAQoeU2ltdWxhdGlvblNjcmVlbkNhcHR1cmVSZXF1",
            "ZXN0Eg4KBmhlaWdodBgBIAEoBRINCgV3aWRodBgCIAEoBRI2CglpbWFnZVR5",
            "cGUYAyABKA4yIy5yb2JvdHN5c3RlbWNvbW11bmljYXRpb24uSW1hZ2VUeXBl",
            "EhIKCmpwZ1F1YWxpdHkYBCABKAUiKQoXU2ltdWxhdGlvbkFjdGlvblJlcXVl",
            "c3QSDgoGYWN0aW9uGAEgASgFIlAKGFNpbXVsYXRpb25BY3Rpb25SZXNwb25z",
            "ZRI0CgZzdGF0dXMYASABKA4yJC5yb2JvdHN5c3RlbWNvbW11bmljYXRpb24u",
            "U3RhdHVzVHlwZSofCgpTdGF0dXNUeXBlEgYKAk9LEAASCQoFRVJST1IQASod",
            "CglJbWFnZVR5cGUSBwoDSlBHEAASBwoDUE5HEAEyfAoNUm9ib3RGcm9udGVu",
            "ZBJrCgpNYWtlQWN0aW9uEiwucm9ib3RzeXN0ZW1jb21tdW5pY2F0aW9uLlJv",
            "Ym90QWN0aW9uUmVxdWVzdBotLnJvYm90c3lzdGVtY29tbXVuaWNhdGlvbi5S",
            "b2JvdEFjdGlvblJlc3BvbnNlIgAyeQoLQnJhaW5TZXJ2ZXISagoJR2V0QWN0",
            "aW9uEiwucm9ib3RzeXN0ZW1jb21tdW5pY2F0aW9uLkJyYWluQWN0aW9uUmVx",
            "dWVzdBotLnJvYm90c3lzdGVtY29tbXVuaWNhdGlvbi5CcmFpbkFjdGlvblJl",
            "c3BvbnNlIgAylQIKEFNpbXVsYXRpb25TZXJ2ZXISiQEKEEdldFNjcmVlbkNh",
            "cHR1cmUSOC5yb2JvdHN5c3RlbWNvbW11bmljYXRpb24uU2ltdWxhdGlvblNj",
            "cmVlbkNhcHR1cmVSZXF1ZXN0Gjkucm9ib3RzeXN0ZW1jb21tdW5pY2F0aW9u",
            "LlNpbXVsYXRpb25TY3JlZW5DYXB0dXJlUmVzcG9uc2UiABJ1CgpNYWtlQWN0",
            "aW9uEjEucm9ib3RzeXN0ZW1jb21tdW5pY2F0aW9uLlNpbXVsYXRpb25BY3Rp",
            "b25SZXF1ZXN0GjIucm9ib3RzeXN0ZW1jb21tdW5pY2F0aW9uLlNpbXVsYXRp",
            "b25BY3Rpb25SZXNwb25zZSIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Robotsystemcommunication.StatusType), typeof(global::Robotsystemcommunication.ImageType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.RobotActionRequest), global::Robotsystemcommunication.RobotActionRequest.Parser, new[]{ "LeftMotorAction", "RightMotorAction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.RobotActionResponse), global::Robotsystemcommunication.RobotActionResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.BrainActionResponse), global::Robotsystemcommunication.BrainActionResponse.Parser, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.BrainActionRequest), global::Robotsystemcommunication.BrainActionRequest.Parser, new[]{ "LowerObservations", "UpperObservations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.SimulationScreenCaptureResponse), global::Robotsystemcommunication.SimulationScreenCaptureResponse.Parser, new[]{ "Image" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.SimulationScreenCaptureRequest), global::Robotsystemcommunication.SimulationScreenCaptureRequest.Parser, new[]{ "Height", "Widht", "ImageType", "JpgQuality" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.SimulationActionRequest), global::Robotsystemcommunication.SimulationActionRequest.Parser, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Robotsystemcommunication.SimulationActionResponse), global::Robotsystemcommunication.SimulationActionResponse.Parser, new[]{ "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// ===============================
  /// COMMUNICATION TO ROBOT FRONTEND
  /// ===============================
  /// </summary>
  public enum StatusType {
    [pbr::OriginalName("OK")] Ok = 0,
    [pbr::OriginalName("ERROR")] Error = 1,
  }

  public enum ImageType {
    [pbr::OriginalName("JPG")] Jpg = 0,
    [pbr::OriginalName("PNG")] Png = 1,
  }

  #endregion

  #region Messages
  public sealed partial class RobotActionRequest : pb::IMessage<RobotActionRequest> {
    private static readonly pb::MessageParser<RobotActionRequest> _parser = new pb::MessageParser<RobotActionRequest>(() => new RobotActionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotActionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotActionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotActionRequest(RobotActionRequest other) : this() {
      leftMotorAction_ = other.leftMotorAction_;
      rightMotorAction_ = other.rightMotorAction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotActionRequest Clone() {
      return new RobotActionRequest(this);
    }

    /// <summary>Field number for the "leftMotorAction" field.</summary>
    public const int LeftMotorActionFieldNumber = 1;
    private int leftMotorAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LeftMotorAction {
      get { return leftMotorAction_; }
      set {
        leftMotorAction_ = value;
      }
    }

    /// <summary>Field number for the "rightMotorAction" field.</summary>
    public const int RightMotorActionFieldNumber = 2;
    private int rightMotorAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RightMotorAction {
      get { return rightMotorAction_; }
      set {
        rightMotorAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotActionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotActionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeftMotorAction != other.LeftMotorAction) return false;
      if (RightMotorAction != other.RightMotorAction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeftMotorAction != 0) hash ^= LeftMotorAction.GetHashCode();
      if (RightMotorAction != 0) hash ^= RightMotorAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeftMotorAction != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LeftMotorAction);
      }
      if (RightMotorAction != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RightMotorAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeftMotorAction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeftMotorAction);
      }
      if (RightMotorAction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RightMotorAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotActionRequest other) {
      if (other == null) {
        return;
      }
      if (other.LeftMotorAction != 0) {
        LeftMotorAction = other.LeftMotorAction;
      }
      if (other.RightMotorAction != 0) {
        RightMotorAction = other.RightMotorAction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LeftMotorAction = input.ReadInt32();
            break;
          }
          case 16: {
            RightMotorAction = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RobotActionResponse : pb::IMessage<RobotActionResponse> {
    private static readonly pb::MessageParser<RobotActionResponse> _parser = new pb::MessageParser<RobotActionResponse>(() => new RobotActionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RobotActionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotActionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotActionResponse(RobotActionResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RobotActionResponse Clone() {
      return new RobotActionResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Robotsystemcommunication.StatusType status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Robotsystemcommunication.StatusType Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RobotActionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RobotActionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RobotActionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::Robotsystemcommunication.StatusType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// =============================
  /// COMMUNICATION TO BRAIN SERVER
  /// =============================
  /// </summary>
  public sealed partial class BrainActionResponse : pb::IMessage<BrainActionResponse> {
    private static readonly pb::MessageParser<BrainActionResponse> _parser = new pb::MessageParser<BrainActionResponse>(() => new BrainActionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrainActionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainActionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainActionResponse(BrainActionResponse other) : this() {
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainActionResponse Clone() {
      return new BrainActionResponse(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private int action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrainActionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrainActionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrainActionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BrainActionRequest : pb::IMessage<BrainActionRequest> {
    private static readonly pb::MessageParser<BrainActionRequest> _parser = new pb::MessageParser<BrainActionRequest>(() => new BrainActionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrainActionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainActionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainActionRequest(BrainActionRequest other) : this() {
      lowerObservations_ = other.lowerObservations_.Clone();
      upperObservations_ = other.upperObservations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrainActionRequest Clone() {
      return new BrainActionRequest(this);
    }

    /// <summary>Field number for the "lowerObservations" field.</summary>
    public const int LowerObservationsFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_lowerObservations_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> lowerObservations_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> LowerObservations {
      get { return lowerObservations_; }
    }

    /// <summary>Field number for the "upperObservations" field.</summary>
    public const int UpperObservationsFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_upperObservations_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> upperObservations_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> UpperObservations {
      get { return upperObservations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrainActionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrainActionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lowerObservations_.Equals(other.lowerObservations_)) return false;
      if(!upperObservations_.Equals(other.upperObservations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lowerObservations_.GetHashCode();
      hash ^= upperObservations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lowerObservations_.WriteTo(output, _repeated_lowerObservations_codec);
      upperObservations_.WriteTo(output, _repeated_upperObservations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lowerObservations_.CalculateSize(_repeated_lowerObservations_codec);
      size += upperObservations_.CalculateSize(_repeated_upperObservations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrainActionRequest other) {
      if (other == null) {
        return;
      }
      lowerObservations_.Add(other.lowerObservations_);
      upperObservations_.Add(other.upperObservations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            lowerObservations_.AddEntriesFrom(input, _repeated_lowerObservations_codec);
            break;
          }
          case 18:
          case 21: {
            upperObservations_.AddEntriesFrom(input, _repeated_upperObservations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// =======================
  /// COMMUNICATION SIMULATOR
  /// =======================
  /// </summary>
  public sealed partial class SimulationScreenCaptureResponse : pb::IMessage<SimulationScreenCaptureResponse> {
    private static readonly pb::MessageParser<SimulationScreenCaptureResponse> _parser = new pb::MessageParser<SimulationScreenCaptureResponse>(() => new SimulationScreenCaptureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimulationScreenCaptureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationScreenCaptureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationScreenCaptureResponse(SimulationScreenCaptureResponse other) : this() {
      image_ = other.image_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationScreenCaptureResponse Clone() {
      return new SimulationScreenCaptureResponse(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private pb::ByteString image_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimulationScreenCaptureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimulationScreenCaptureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Image != other.Image) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Image.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimulationScreenCaptureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Image = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SimulationScreenCaptureRequest : pb::IMessage<SimulationScreenCaptureRequest> {
    private static readonly pb::MessageParser<SimulationScreenCaptureRequest> _parser = new pb::MessageParser<SimulationScreenCaptureRequest>(() => new SimulationScreenCaptureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimulationScreenCaptureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationScreenCaptureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationScreenCaptureRequest(SimulationScreenCaptureRequest other) : this() {
      height_ = other.height_;
      widht_ = other.widht_;
      imageType_ = other.imageType_;
      jpgQuality_ = other.jpgQuality_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationScreenCaptureRequest Clone() {
      return new SimulationScreenCaptureRequest(this);
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 1;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "widht" field.</summary>
    public const int WidhtFieldNumber = 2;
    private int widht_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Widht {
      get { return widht_; }
      set {
        widht_ = value;
      }
    }

    /// <summary>Field number for the "imageType" field.</summary>
    public const int ImageTypeFieldNumber = 3;
    private global::Robotsystemcommunication.ImageType imageType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Robotsystemcommunication.ImageType ImageType {
      get { return imageType_; }
      set {
        imageType_ = value;
      }
    }

    /// <summary>Field number for the "jpgQuality" field.</summary>
    public const int JpgQualityFieldNumber = 4;
    private int jpgQuality_;
    /// <summary>
    /// Used only if image type is JPG
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JpgQuality {
      get { return jpgQuality_; }
      set {
        jpgQuality_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimulationScreenCaptureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimulationScreenCaptureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Height != other.Height) return false;
      if (Widht != other.Widht) return false;
      if (ImageType != other.ImageType) return false;
      if (JpgQuality != other.JpgQuality) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Widht != 0) hash ^= Widht.GetHashCode();
      if (ImageType != 0) hash ^= ImageType.GetHashCode();
      if (JpgQuality != 0) hash ^= JpgQuality.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Height != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Height);
      }
      if (Widht != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Widht);
      }
      if (ImageType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ImageType);
      }
      if (JpgQuality != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(JpgQuality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Widht != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Widht);
      }
      if (ImageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImageType);
      }
      if (JpgQuality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JpgQuality);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimulationScreenCaptureRequest other) {
      if (other == null) {
        return;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Widht != 0) {
        Widht = other.Widht;
      }
      if (other.ImageType != 0) {
        ImageType = other.ImageType;
      }
      if (other.JpgQuality != 0) {
        JpgQuality = other.JpgQuality;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Height = input.ReadInt32();
            break;
          }
          case 16: {
            Widht = input.ReadInt32();
            break;
          }
          case 24: {
            imageType_ = (global::Robotsystemcommunication.ImageType) input.ReadEnum();
            break;
          }
          case 32: {
            JpgQuality = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SimulationActionRequest : pb::IMessage<SimulationActionRequest> {
    private static readonly pb::MessageParser<SimulationActionRequest> _parser = new pb::MessageParser<SimulationActionRequest>(() => new SimulationActionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimulationActionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationActionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationActionRequest(SimulationActionRequest other) : this() {
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationActionRequest Clone() {
      return new SimulationActionRequest(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private int action_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimulationActionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimulationActionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimulationActionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SimulationActionResponse : pb::IMessage<SimulationActionResponse> {
    private static readonly pb::MessageParser<SimulationActionResponse> _parser = new pb::MessageParser<SimulationActionResponse>(() => new SimulationActionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SimulationActionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Robotsystemcommunication.RobotSystemCommunicationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationActionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationActionResponse(SimulationActionResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SimulationActionResponse Clone() {
      return new SimulationActionResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Robotsystemcommunication.StatusType status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Robotsystemcommunication.StatusType Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SimulationActionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SimulationActionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SimulationActionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::Robotsystemcommunication.StatusType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
